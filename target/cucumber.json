[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:15:16.440Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 3,
        "name": "Validating success response in api call with token",
        "description": "",
        "id": "validating-authorization-api-calls;validating-success-response-in-api-call-with-token",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3199920500,
              "status": "passed"
            },
            "line": 4,
            "name": "User sends get customers api call with access token",
            "match": {
              "location": "steps.BankApiSteps.user_sends_get_customers_api_call_with_access_token()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "User validates 200 status code",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 15
                }
              ],
              "location": "steps.BankApiSteps.user_validates_status_code(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@HR1006"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:15:19.724Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 7,
        "name": "Validating forbidden response in api call when sending without token",
        "description": "",
        "id": "validating-authorization-api-calls;validating-forbidden-response-in-api-call-when-sending-without-token",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 218734800,
              "status": "passed"
            },
            "line": 8,
            "name": "User sends get customers api call without access token",
            "match": {
              "location": "steps.BankApiSteps.user_sends_get_customers_api_call_without_access_token()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "User validates 403 status code",
            "match": {
              "arguments": [
                {
                  "val": "403",
                  "offset": 15
                }
              ],
              "location": "steps.BankApiSteps.user_validates_status_code(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@HR1006"
          }
        ]
      }
    ],
    "name": "validating Authorization api calls",
    "description": "",
    "id": "validating-authorization-api-calls",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/ApiCallsBankAuthorizationTest.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@api",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 18
        }
      },
      {
        "name": "@HR1006",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 25
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:15:19.974Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 21,
        "name": "Validating POST Api call for employees",
        "description": "",
        "id": "validating-api-calls-for-employees;validating-post-api-call-for-employees;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3074471700,
              "status": "passed"
            },
            "line": 5,
            "name": "User sends create employee api post call with data",
            "match": {
              "location": "steps.HRAppAPIStep.user_sends_create_employee_api_post_call_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstName",
                  "Ben"
                ]
              },
              {
                "cells": [
                  "lastName",
                  "Gory"
                ]
              },
              {
                "cells": [
                  "departmentName",
                  "IT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "user validates status code 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 27
                }
              ],
              "location": "steps.HRAppAPIStep.user_validates_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3122243300,
              "status": "passed"
            },
            "line": 10,
            "name": "user validates data populated in UI",
            "match": {
              "location": "steps.HRAppAPIStep.user_validates_data_populated_in_UI(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstName",
                  "Ben"
                ]
              },
              {
                "cells": [
                  "lastName",
                  "Gory"
                ]
              },
              {
                "cells": [
                  "departmentName",
                  "IT"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "User validates employee data os persisted into DB",
            "match": {
              "location": "steps.HRAppAPIStep.user_validates_employee_data_os_persisted_into_DB()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "User validates data with get employee api call",
            "match": {
              "location": "steps.HRAppAPIStep.user_validates_data_with_get_employee_api_call(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstName",
                  "Ben"
                ]
              },
              {
                "cells": [
                  "lastName",
                  "Gory"
                ]
              },
              {
                "cells": [
                  "departmentName",
                  "IT"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@api"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@HR2021"
          }
        ]
      }
    ],
    "name": "Validating Api Calls for Employees",
    "description": "",
    "id": "validating-api-calls-for-employees",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/ApiCallsEmployees.feature",
    "tags": [
      {
        "name": "@api",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 6
        }
      },
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@HR2021",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 25
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:15:26.187Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 3,
        "name": "Validating account api cals",
        "description": "",
        "id": "validating-bank-rest-api-calls;validating-account-api-cals",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 462627400,
              "status": "passed"
            },
            "line": 4,
            "name": "user creates account with api call with data",
            "match": {
              "location": "steps.ApiBankTestSteps.user_creates_account_with_api_call_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "accountType",
                  "Checking"
                ]
              },
              {
                "cells": [
                  "balance",
                  "100000"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "user validate 201 status code",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 14
                }
              ],
              "location": "steps.ApiBankTestSteps.user_validate_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 421851000,
              "status": "passed"
            },
            "line": 8,
            "name": "user validate that account is created with api get call",
            "match": {
              "location": "steps.ApiBankTestSteps.user_validate_that_account_is_created_with_api_get_call()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 425013400,
              "status": "passed"
            },
            "line": 9,
            "name": "user updates account with api put call with data",
            "match": {
              "location": "steps.ApiBankTestSteps.user_updates_account_with_api_put_call_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "accountType",
                  "Saving"
                ]
              },
              {
                "cells": [
                  "balance",
                  "100500"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "user validate 200 status code",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 14
                }
              ],
              "location": "steps.ApiBankTestSteps.user_validate_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 390599200,
              "status": "passed"
            },
            "line": 13,
            "name": "user validates that account is updated with api get call",
            "match": {
              "location": "steps.ApiBankTestSteps.user_validates_that_account_is_updated_with_api_get_call()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 406229300,
              "status": "passed"
            },
            "line": 14,
            "name": "user deletes account with api call",
            "match": {
              "location": "steps.ApiBankTestSteps.user_deletes_account_with_api_call()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user validate 204 status code",
            "match": {
              "arguments": [
                {
                  "val": "204",
                  "offset": 14
                }
              ],
              "location": "steps.ApiBankTestSteps.user_validate_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 440020900,
              "status": "passed"
            },
            "line": 16,
            "name": "user validates that account deleted with api call",
            "match": {
              "location": "steps.ApiBankTestSteps.user_validates_that_account_deleted_with_api_call()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@api"
          },
          {
            "name": "@MB2P-202"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          }
        ]
      }
    ],
    "name": "Validating Bank rest API calls",
    "description": "",
    "id": "validating-bank-rest-api-calls",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/BankAppApiTests.feature",
    "tags": [
      {
        "name": "@api",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@MB2P-202",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 6
        }
      },
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 16
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 28
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "Repeated first steps in each scenario.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2005425500,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to Etsy application",
            "match": {
              "location": "steps.EtsyAppSteps.user_navigate_to_Etsy_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2698446400,
              "status": "passed"
            },
            "line": 6,
            "name": "user searches for \"carpet\"",
            "match": {
              "arguments": [
                {
                  "val": "\"carpet\"",
                  "offset": 18
                }
              ],
              "location": "steps.EtsyAppSteps.user_searches_for(java.lang.String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:15:28.749Z",
        "before": [
          {
            "result": {
              "duration": 31245200,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Validating price range filter functionality for searched item",
        "description": "",
        "id": "validating-etsy-search-and-filter-functionalities;validating-price-range-filter-functionality-for-searched-item",
        "after": [
          {
            "result": {
              "duration": 713105900,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 748845500,
              "status": "passed"
            },
            "line": 10,
            "name": "user applies price filter over 1000",
            "match": {
              "arguments": [
                {
                  "val": "1000",
                  "offset": 31
                }
              ],
              "location": "steps.EtsyAppSteps.user_applies_price_filter_over(java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4228390400,
              "status": "passed"
            },
            "line": 11,
            "name": "user validates that item prices over 1000",
            "match": {
              "arguments": [
                {
                  "val": "1000",
                  "offset": 37
                }
              ],
              "location": "steps.EtsyAppSteps.user_validates_that_item_prices_over(java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          }
        ]
      },
      {
        "line": 4,
        "name": "Repeated first steps in each scenario.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2154479800,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to Etsy application",
            "match": {
              "location": "steps.EtsyAppSteps.user_navigate_to_Etsy_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2070654900,
              "status": "passed"
            },
            "line": 6,
            "name": "user searches for \"carpet\"",
            "match": {
              "arguments": [
                {
                  "val": "\"carpet\"",
                  "offset": 18
                }
              ],
              "location": "steps.EtsyAppSteps.user_searches_for(java.lang.String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:15:39.174Z",
        "before": [
          {
            "result": {
              "duration": 1294752500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "Validating search results",
        "description": "",
        "id": "validating-etsy-search-and-filter-functionalities;validating-search-results",
        "after": [
          {
            "result": {
              "duration": 663384400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2009292800,
              "status": "passed"
            },
            "line": 14,
            "name": "user validates search result items contains keyword \"carpet\"",
            "match": {
              "arguments": [
                {
                  "val": "\"carpet\"",
                  "offset": 52
                }
              ],
              "location": "steps.EtsyAppSteps.user_validates_search_result_items_contains_keyword(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@smoke"
          }
        ]
      }
    ],
    "name": "Validating Etsy search and filter functionalities",
    "description": "",
    "id": "validating-etsy-search-and-filter-functionalities",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/EtsyAppSearchFilterTests.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:15:47.382Z",
        "before": [
          {
            "result": {
              "duration": 1271832400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "Validating etsy separate page titles",
        "description": "",
        "id": "validating-etsy-titles;validating-etsy-separate-page-titles;;2",
        "after": [
          {
            "result": {
              "duration": 650341300,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1942201200,
              "status": "passed"
            },
            "line": 6,
            "name": "user navigate to Etsy application",
            "match": {
              "location": "steps.EtsyAppSteps.user_navigate_to_Etsy_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2177701800,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on \"Jewelery and Accessories\" section",
            "match": {
              "arguments": [
                {
                  "val": "\"Jewelery and Accessories\"",
                  "offset": 15
                }
              ],
              "location": "steps.EtsyAppSteps.userClicksOnSection(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20989300,
              "status": "passed"
            },
            "line": 8,
            "name": "user validates title is \"Jewelry \u0026 Accessories | Etsy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Jewelry \u0026 Accessories | Etsy\"",
                  "offset": 24
                }
              ],
              "location": "steps.EtsyAppSteps.userValidatesTitleIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:15:53.461Z",
        "before": [
          {
            "result": {
              "duration": 1323862400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "Validating etsy separate page titles",
        "description": "",
        "id": "validating-etsy-titles;validating-etsy-separate-page-titles;;3",
        "after": [
          {
            "result": {
              "duration": 632150500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2402461000,
              "status": "passed"
            },
            "line": 6,
            "name": "user navigate to Etsy application",
            "match": {
              "location": "steps.EtsyAppSteps.user_navigate_to_Etsy_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1804990200,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on \"Clothing and Shoes\" section",
            "match": {
              "arguments": [
                {
                  "val": "\"Clothing and Shoes\"",
                  "offset": 15
                }
              ],
              "location": "steps.EtsyAppSteps.userClicksOnSection(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26987500,
              "status": "passed"
            },
            "line": 8,
            "name": "user validates title is \"Clothing \u0026 Shoes | Etsy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Clothing \u0026 Shoes | Etsy\"",
                  "offset": 24
                }
              ],
              "location": "steps.EtsyAppSteps.userValidatesTitleIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:15:59.651Z",
        "before": [
          {
            "result": {
              "duration": 1266496400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 14,
        "name": "Validating etsy separate page titles",
        "description": "",
        "id": "validating-etsy-titles;validating-etsy-separate-page-titles;;4",
        "after": [
          {
            "result": {
              "duration": 651708400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2031014400,
              "status": "passed"
            },
            "line": 6,
            "name": "user navigate to Etsy application",
            "match": {
              "location": "steps.EtsyAppSteps.user_navigate_to_Etsy_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2435825700,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on \"Home and Living\" section",
            "match": {
              "arguments": [
                {
                  "val": "\"Home and Living\"",
                  "offset": 15
                }
              ],
              "location": "steps.EtsyAppSteps.userClicksOnSection(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12994100,
              "status": "passed"
            },
            "line": 8,
            "name": "user validates title is \"Home \u0026 Living | Etsy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Home \u0026 Living | Etsy\"",
                  "offset": 24
                }
              ],
              "location": "steps.EtsyAppSteps.userValidatesTitleIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:16:06.055Z",
        "before": [
          {
            "result": {
              "duration": 1295465900,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "Validating etsy separate page titles",
        "description": "",
        "id": "validating-etsy-titles;validating-etsy-separate-page-titles;;5",
        "after": [
          {
            "result": {
              "duration": 664359800,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1833821900,
              "status": "passed"
            },
            "line": 6,
            "name": "user navigate to Etsy application",
            "match": {
              "location": "steps.EtsyAppSteps.user_navigate_to_Etsy_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1774575600,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on \"Wedding and Party\" section",
            "match": {
              "arguments": [
                {
                  "val": "\"Wedding and Party\"",
                  "offset": 15
                }
              ],
              "location": "steps.EtsyAppSteps.userClicksOnSection(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 97952200,
              "status": "passed"
            },
            "line": 8,
            "name": "user validates title is \"Wedding \u0026 Party | Etsy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Wedding \u0026 Party | Etsy\"",
                  "offset": 24
                }
              ],
              "location": "steps.EtsyAppSteps.userValidatesTitleIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:16:11.722Z",
        "before": [
          {
            "result": {
              "duration": 1312287000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 16,
        "name": "Validating etsy separate page titles",
        "description": "",
        "id": "validating-etsy-titles;validating-etsy-separate-page-titles;;6",
        "after": [
          {
            "result": {
              "duration": 638246800,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2470277600,
              "status": "passed"
            },
            "line": 6,
            "name": "user navigate to Etsy application",
            "match": {
              "location": "steps.EtsyAppSteps.user_navigate_to_Etsy_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2260131800,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on \"Toys and Entertainment\" section",
            "match": {
              "arguments": [
                {
                  "val": "\"Toys and Entertainment\"",
                  "offset": 15
                }
              ],
              "location": "steps.EtsyAppSteps.userClicksOnSection(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20992100,
              "status": "passed"
            },
            "line": 8,
            "name": "user validates title is \"Toys \u0026 Entertainment | Etsy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Toys \u0026 Entertainment | Etsy\"",
                  "offset": 24
                }
              ],
              "location": "steps.EtsyAppSteps.userValidatesTitleIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:16:18.424Z",
        "before": [
          {
            "result": {
              "duration": 1292411400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 17,
        "name": "Validating etsy separate page titles",
        "description": "",
        "id": "validating-etsy-titles;validating-etsy-separate-page-titles;;7",
        "after": [
          {
            "result": {
              "duration": 624668200,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1903813300,
              "status": "passed"
            },
            "line": 6,
            "name": "user navigate to Etsy application",
            "match": {
              "location": "steps.EtsyAppSteps.user_navigate_to_Etsy_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 975867800,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on \"Art and Collectibles\" section",
            "match": {
              "arguments": [
                {
                  "val": "\"Art and Collectibles\"",
                  "offset": 15
                }
              ],
              "location": "steps.EtsyAppSteps.userClicksOnSection(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15991100,
              "status": "passed"
            },
            "line": 8,
            "name": "user validates title is \"Art \u0026 Collectibles | Etsy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Art \u0026 Collectibles | Etsy\"",
                  "offset": 24
                }
              ],
              "location": "steps.EtsyAppSteps.userValidatesTitleIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          }
        ]
      }
    ],
    "name": "Validating etsy titles",
    "description": "",
    "id": "validating-etsy-titles",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/EtsyAppTitleTests.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "First repeated steps in all scenarios",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 516735900,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 200676300,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3120694700,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Create New Employee button",
            "match": {
              "location": "steps.HRAppSteps.user_clicks_on_Create_New_Employee_button()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:16:23.236Z",
        "before": [
          {
            "result": {
              "duration": 1263740900,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 19,
        "name": "Validating Create employee functionality with valid data",
        "description": "",
        "id": "create-employee-functionality-validation;validating-create-employee-functionality-with-valid-data;;2",
        "after": [
          {
            "result": {
              "duration": 639245500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 604471700,
              "status": "passed"
            },
            "line": 10,
            "name": "user creates employee with data",
            "match": {
              "location": "steps.HRAppSteps.user_creates_employee_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First name",
                  "Adrian"
                ]
              },
              {
                "cells": [
                  "Last name",
                  "Torres"
                ]
              },
              {
                "cells": [
                  "Department",
                  "IT"
                ]
              },
              {
                "cells": [
                  "Job Title",
                  "Stock Clerk"
                ]
              },
              {
                "cells": [
                  "Salary",
                  "100000"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1377335900,
              "status": "passed"
            },
            "line": 16,
            "name": "user validates that employee is in list of employees",
            "match": {
              "location": "steps.HRAppSteps.user_validates_that_employee_is_in_list_of_employees()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-204"
          }
        ]
      },
      {
        "line": 4,
        "name": "First repeated steps in all scenarios",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 544408100,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 220014900,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3120174500,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Create New Employee button",
            "match": {
              "location": "steps.HRAppSteps.user_clicks_on_Create_New_Employee_button()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:16:30.959Z",
        "before": [
          {
            "result": {
              "duration": 1240498500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 20,
        "name": "Validating Create employee functionality with valid data",
        "description": "",
        "id": "create-employee-functionality-validation;validating-create-employee-functionality-with-valid-data;;3",
        "after": [
          {
            "result": {
              "duration": 638714800,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 625466500,
              "status": "passed"
            },
            "line": 10,
            "name": "user creates employee with data",
            "match": {
              "location": "steps.HRAppSteps.user_creates_employee_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First name",
                  "Peter"
                ]
              },
              {
                "cells": [
                  "Last name",
                  "Well"
                ]
              },
              {
                "cells": [
                  "Department",
                  "Shipping"
                ]
              },
              {
                "cells": [
                  "Job Title",
                  "Sales Manager"
                ]
              },
              {
                "cells": [
                  "Salary",
                  "125125"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1369035400,
              "status": "passed"
            },
            "line": 16,
            "name": "user validates that employee is in list of employees",
            "match": {
              "location": "steps.HRAppSteps.user_validates_that_employee_is_in_list_of_employees()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-204"
          }
        ]
      },
      {
        "line": 4,
        "name": "First repeated steps in all scenarios",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 560585700,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 220989000,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3109883300,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Create New Employee button",
            "match": {
              "location": "steps.HRAppSteps.user_clicks_on_Create_New_Employee_button()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:16:38.733Z",
        "before": [
          {
            "result": {
              "duration": 1283449700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 21,
        "name": "Validating Create employee functionality with valid data",
        "description": "",
        "id": "create-employee-functionality-validation;validating-create-employee-functionality-with-valid-data;;4",
        "after": [
          {
            "result": {
              "duration": 614664600,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 615204200,
              "status": "passed"
            },
            "line": 10,
            "name": "user creates employee with data",
            "match": {
              "location": "steps.HRAppSteps.user_creates_employee_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First name",
                  "Will"
                ]
              },
              {
                "cells": [
                  "Last name",
                  "Lee"
                ]
              },
              {
                "cells": [
                  "Department",
                  "Marketing"
                ]
              },
              {
                "cells": [
                  "Job Title",
                  "Accountant"
                ]
              },
              {
                "cells": [
                  "Salary",
                  "130000"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1347286200,
              "status": "passed"
            },
            "line": 16,
            "name": "user validates that employee is in list of employees",
            "match": {
              "location": "steps.HRAppSteps.user_validates_that_employee_is_in_list_of_employees()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-204"
          }
        ]
      },
      {
        "line": 4,
        "name": "First repeated steps in all scenarios",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 541458200,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 198861000,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3117025300,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Create New Employee button",
            "match": {
              "location": "steps.HRAppSteps.user_clicks_on_Create_New_Employee_button()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:16:46.501Z",
        "before": [
          {
            "result": {
              "duration": 1301245300,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 24,
        "name": "Validating Create employee functionality without providing name",
        "description": "",
        "id": "create-employee-functionality-validation;validating-create-employee-functionality-without-providing-name",
        "after": [
          {
            "result": {
              "duration": 1132097100,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 444405200,
              "status": "passed"
            },
            "line": 25,
            "name": "user creates employee with data",
            "match": {
              "location": "steps.HRAppSteps.user_creates_employee_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Department",
                  "IT"
                ]
              },
              {
                "cells": [
                  "Job Title",
                  "Stock Clerk"
                ]
              },
              {
                "cells": [
                  "Salary",
                  "100000"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 999400,
              "status": "passed"
            },
            "line": 29,
            "name": "user validates error message in HR App \"First name and last name are required fields.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"First name and last name are required fields.\"",
                  "offset": 39
                }
              ],
              "location": "steps.HRAppSteps.userValidatesErrorMessageInHRApp(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-204"
          },
          {
            "name": "@MB2P-204-TC2"
          }
        ]
      },
      {
        "line": 4,
        "name": "First repeated steps in all scenarios",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 544663500,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 222164200,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3110681400,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Create New Employee button",
            "match": {
              "location": "steps.HRAppSteps.user_clicks_on_Create_New_Employee_button()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:16:53.237Z",
        "before": [
          {
            "result": {
              "duration": 1328351100,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 31,
        "name": "Validating Create employee functionality with negative salary",
        "description": "",
        "id": "create-employee-functionality-validation;validating-create-employee-functionality-with-negative-salary",
        "after": [
          {
            "result": {
              "duration": 1132167700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 626474600,
              "status": "passed"
            },
            "line": 32,
            "name": "user creates employee with data",
            "match": {
              "location": "steps.HRAppSteps.user_creates_employee_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First name",
                  "Scott"
                ]
              },
              {
                "cells": [
                  "Last name",
                  "Ramos"
                ]
              },
              {
                "cells": [
                  "Department",
                  "IT"
                ]
              },
              {
                "cells": [
                  "Job Title",
                  "Stock Clerk"
                ]
              },
              {
                "cells": [
                  "Salary",
                  "-89000"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "user validates error message in HR App \"Salary can not be negative.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Salary can not be negative.\"",
                  "offset": 39
                }
              ],
              "location": "steps.HRAppSteps.userValidatesErrorMessageInHRApp(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-204"
          }
        ]
      }
    ],
    "name": "Create Employee functionality Validation",
    "description": "",
    "id": "create-employee-functionality-validation",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/HRAppCreateEmployeeTests.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 20
        }
      },
      {
        "name": "@MB2P-204",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 24
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:17:00.202Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 3,
        "name": "Validate create an employee persisted in Database",
        "description": "",
        "id": "validate-create-employee-functionality;validate-create-an-employee-persisted-in-database",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 4,
            "name": "New employee was created",
            "match": {
              "location": "steps.HRAppDBSteps.new_employee_was_created()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "User accesses the Database",
            "match": {
              "location": "steps.HRAppDBSteps.user_accesses_the_Database()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat utilities.JDBCUtils.runQuery(JDBCUtils.java:46)\r\n\tat steps.HRAppDBSteps.user_validates_new_employee(HRAppDBSteps.java:28)\r\n\tat ✽.User validates new employee(file:///C:/Users/Master/IdeaProjects/MIndCucAutom/src/test/resources/features/HRAppDBTest.feature:6)\r\n",
              "status": "failed"
            },
            "line": 6,
            "name": "User validates new employee",
            "match": {
              "location": "steps.HRAppDBSteps.user_validates_new_employee()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@DB101"
          }
        ]
      }
    ],
    "name": "Validate create employee functionality",
    "description": "",
    "id": "validate-create-employee-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/HRAppDBTest.feature",
    "tags": [
      {
        "name": "@DB",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 5
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 17
        }
      },
      {
        "name": "@DB101",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 24
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:17:00.222Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 11,
        "name": "Validating employee with database employee data",
        "description": "",
        "id": "validating-database;validating-employee-with-database-employee-data;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1800956800,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HRApp",
            "match": {
              "location": "steps.HRAppQATestSteps.user_navigates_to_HRApp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 239014300,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username “Mindtek” and password “MindtekStudent”",
            "match": {
              "location": "steps.HRAppQATestSteps.user_logs_in_with_username_Mindtek_and_password_MindtekStudent()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128791900,
              "status": "passed"
            },
            "line": 7,
            "name": "user search for employee with employee id 100",
            "match": {
              "arguments": [
                {
                  "val": "100",
                  "offset": 42
                }
              ],
              "location": "steps.HRAppQATestSteps.user_search_for_employee_with_employee_id(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat utilities.JDBCUtils.runQuery(JDBCUtils.java:46)\r\n\tat steps.HRAppQATestSteps.user_validates_that_employee_data_in_UI_matches_with_Database_data_with_employee_id(HRAppQATestSteps.java:47)\r\n\tat ✽.user validates that employee data in UI matches with Database data with employee id 100(file:///C:/Users/Master/IdeaProjects/MIndCucAutom/src/test/resources/features/HRAppDbProjectTest.feature:8)\r\n",
              "duration": 1998500,
              "status": "failed"
            },
            "line": 8,
            "name": "user validates that employee data in UI matches with Database data with employee id 100",
            "match": {
              "arguments": [
                {
                  "val": "100",
                  "offset": 84
                }
              ],
              "location": "steps.HRAppQATestSteps.user_validates_that_employee_data_in_UI_matches_with_Database_data_with_employee_id(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB2021"
          },
          {
            "name": "@regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:17:02.398Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "Validating employee with database employee data",
        "description": "",
        "id": "validating-database;validating-employee-with-database-employee-data;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 181180800,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HRApp",
            "match": {
              "location": "steps.HRAppQATestSteps.user_navigates_to_HRApp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 176903500,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username “Mindtek” and password “MindtekStudent”",
            "match": {
              "location": "steps.HRAppQATestSteps.user_logs_in_with_username_Mindtek_and_password_MindtekStudent()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 177701300,
              "status": "passed"
            },
            "line": 7,
            "name": "user search for employee with employee id 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 42
                }
              ],
              "location": "steps.HRAppQATestSteps.user_search_for_employee_with_employee_id(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat utilities.JDBCUtils.runQuery(JDBCUtils.java:46)\r\n\tat steps.HRAppQATestSteps.user_validates_that_employee_data_in_UI_matches_with_Database_data_with_employee_id(HRAppQATestSteps.java:47)\r\n\tat ✽.user validates that employee data in UI matches with Database data with employee id 200(file:///C:/Users/Master/IdeaProjects/MIndCucAutom/src/test/resources/features/HRAppDbProjectTest.feature:8)\r\n",
              "status": "failed"
            },
            "line": 8,
            "name": "user validates that employee data in UI matches with Database data with employee id 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 84
                }
              ],
              "location": "steps.HRAppQATestSteps.user_validates_that_employee_data_in_UI_matches_with_Database_data_with_employee_id(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB2021"
          },
          {
            "name": "@regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:17:02.942Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "Validating employee with database employee data",
        "description": "",
        "id": "validating-database;validating-employee-with-database-employee-data;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 277212200,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HRApp",
            "match": {
              "location": "steps.HRAppQATestSteps.user_navigates_to_HRApp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 180818900,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username “Mindtek” and password “MindtekStudent”",
            "match": {
              "location": "steps.HRAppQATestSteps.user_logs_in_with_username_Mindtek_and_password_MindtekStudent()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 180594900,
              "status": "passed"
            },
            "line": 7,
            "name": "user search for employee with employee id 206",
            "match": {
              "arguments": [
                {
                  "val": "206",
                  "offset": 42
                }
              ],
              "location": "steps.HRAppQATestSteps.user_search_for_employee_with_employee_id(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat utilities.JDBCUtils.runQuery(JDBCUtils.java:46)\r\n\tat steps.HRAppQATestSteps.user_validates_that_employee_data_in_UI_matches_with_Database_data_with_employee_id(HRAppQATestSteps.java:47)\r\n\tat ✽.user validates that employee data in UI matches with Database data with employee id 206(file:///C:/Users/Master/IdeaProjects/MIndCucAutom/src/test/resources/features/HRAppDbProjectTest.feature:8)\r\n",
              "duration": 1001800,
              "status": "failed"
            },
            "line": 8,
            "name": "user validates that employee data in UI matches with Database data with employee id 206",
            "match": {
              "arguments": [
                {
                  "val": "206",
                  "offset": 84
                }
              ],
              "location": "steps.HRAppQATestSteps.user_validates_that_employee_data_in_UI_matches_with_Database_data_with_employee_id(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB2021"
          },
          {
            "name": "@regression"
          }
        ]
      }
    ],
    "name": "Validating Database",
    "description": "",
    "id": "validating-database",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/HRAppDbProjectTest.feature",
    "tags": [
      {
        "name": "@DB2021",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 9
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "First repeated steps in all scenarios",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 158837200,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 186742200,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3117253000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Create New Employee button",
            "match": {
              "location": "steps.HRAppSteps.user_clicks_on_Create_New_Employee_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 607649500,
              "status": "passed"
            },
            "line": 8,
            "name": "user creates employee with data",
            "match": {
              "location": "steps.HRAppSteps.user_creates_employee_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First name",
                  "Scott"
                ]
              },
              {
                "cells": [
                  "Last name",
                  "Ramos"
                ]
              },
              {
                "cells": [
                  "Department",
                  "IT"
                ]
              },
              {
                "cells": [
                  "Job Title",
                  "Stock Clerk"
                ]
              },
              {
                "cells": [
                  "Salary",
                  "125000"
                ]
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:17:03.586Z",
        "before": [
          {
            "result": {
              "duration": 27627700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "Validating delete employee functionality in HR Application",
        "description": "",
        "id": "validating-delete/edit-functionalities-in-hr-application;validating-delete-employee-functionality-in-hr-application",
        "after": [
          {
            "result": {
              "duration": 741614700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1365734600,
              "status": "passed"
            },
            "line": 16,
            "name": "user deletes created employee",
            "match": {
              "location": "steps.HRAppSteps2.user_deletes_created_employee()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30987700,
              "status": "passed"
            },
            "line": 17,
            "name": "user validates that employee is deleted",
            "match": {
              "location": "steps.HRAppSteps2.user_validates_that_employee_is_deleted()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-HM7"
          }
        ]
      },
      {
        "line": 4,
        "name": "First repeated steps in all scenarios",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 575300900,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 222548100,
              "status": "passed"
            },
            "line": 6,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3121801600,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Create New Employee button",
            "match": {
              "location": "steps.HRAppSteps.user_clicks_on_Create_New_Employee_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 605891100,
              "status": "passed"
            },
            "line": 8,
            "name": "user creates employee with data",
            "match": {
              "location": "steps.HRAppSteps.user_creates_employee_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First name",
                  "Scott"
                ]
              },
              {
                "cells": [
                  "Last name",
                  "Ramos"
                ]
              },
              {
                "cells": [
                  "Department",
                  "IT"
                ]
              },
              {
                "cells": [
                  "Job Title",
                  "Stock Clerk"
                ]
              },
              {
                "cells": [
                  "Salary",
                  "125000"
                ]
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:17:09.824Z",
        "before": [
          {
            "result": {
              "duration": 1290739500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 19,
        "name": "Validating edit employee functionality in HR Application",
        "description": "",
        "id": "validating-delete/edit-functionalities-in-hr-application;validating-edit-employee-functionality-in-hr-application",
        "after": [
          {
            "result": {
              "duration": 642050100,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1504937700,
              "status": "passed"
            },
            "line": 20,
            "name": "user edit created employee first name",
            "match": {
              "location": "steps.HRAppSteps2.user_edit_created_employee_first_name()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 217899000,
              "status": "passed"
            },
            "line": 21,
            "name": "user validates that employee first name is updated",
            "match": {
              "location": "steps.HRAppSteps2.user_validates_that_employee_first_name_is_updated()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-HM7"
          }
        ]
      }
    ],
    "name": "Validating delete/edit functionalities in HR Application",
    "description": "",
    "id": "validating-delete/edit-functionalities-in-hr-application",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/HRAppDeleteEditFunctionality.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@MB2P-HM7",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 17
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:17:18.006Z",
        "before": [
          {
            "result": {
              "duration": 1296045300,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "Validating employees from specific department in UI matches with Api data",
        "description": "",
        "id": "validating-hr-app-api-calls;validating-employees-from-specific-department-in-ui-matches-with-api-data;;2",
        "after": [
          {
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 818678600,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 549548100,
              "status": "passed"
            },
            "line": 4,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 201674300,
              "status": "passed"
            },
            "line": 5,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 315282000,
              "status": "passed"
            },
            "line": 6,
            "name": "user selects \"IT\" department",
            "match": {
              "arguments": [
                {
                  "val": "\"IT\"",
                  "offset": 13
                }
              ],
              "location": "steps.HrAppApiT.user_selects_department(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2358322800,
              "status": "passed"
            },
            "line": 7,
            "name": "user stores ui data from selected department",
            "match": {
              "location": "steps.HrAppApiT.user_stores_ui_data_from_selected_department()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat utilities.JDBCUtils.runQuery(JDBCUtils.java:46)\r\n\tat steps.HrAppApiT.user_sends_get_employees_api_call_for_department(HrAppApiT.java:61)\r\n\tat ✽.user sends get employees api call for \"IT\" department(file:///C:/Users/Master/IdeaProjects/MIndCucAutom/src/test/resources/features/HrAppApiTest.feature:8)\r\n",
              "status": "failed"
            },
            "line": 8,
            "name": "user sends get employees api call for \"IT\" department",
            "match": {
              "arguments": [
                {
                  "val": "\"IT\"",
                  "offset": 38
                }
              ],
              "location": "steps.HrAppApiT.user_sends_get_employees_api_call_for_department(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user validates 200 status code",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 15
                }
              ],
              "location": "steps.HrAppApiT.user_validates_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user validates ui data matches with api data with \"IT\" department employees",
            "match": {
              "arguments": [
                {
                  "val": "\"IT\"",
                  "offset": 50
                }
              ],
              "location": "steps.HrAppApiT.user_validates_ui_data_matches_with_api_data_with_department_employees(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user gets employees from DB who works in \"IT\" department",
            "match": {
              "arguments": [
                {
                  "val": "\"IT\"",
                  "offset": 41
                }
              ],
              "location": "steps.HrAppApiT.user_gets_employees_from_DB_who_works_in_department(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user validates ui data matches with DB data",
            "match": {
              "location": "steps.HrAppApiT.user_validates_ui_data_matches_with_DB_data()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@MB2-333"
          },
          {
            "name": "@api"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:17:23.561Z",
        "before": [
          {
            "result": {
              "duration": 1302807700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 16,
        "name": "Validating employees from specific department in UI matches with Api data",
        "description": "",
        "id": "validating-hr-app-api-calls;validating-employees-from-specific-department-in-ui-matches-with-api-data;;3",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 770156900,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 578537500,
              "status": "passed"
            },
            "line": 4,
            "name": "user navigates to HR Application",
            "match": {
              "location": "steps.HRAppSteps.user_navigates_to_HR_Application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 221848700,
              "status": "passed"
            },
            "line": 5,
            "name": "user logs in with username \"Mindtek\" password \"MindtekStudent\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Mindtek\"",
                  "offset": 27
                },
                {
                  "val": "\"MindtekStudent\"",
                  "offset": 46
                }
              ],
              "location": "steps.HRAppSteps.user_logs_in_with_username_password(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 363433500,
              "status": "passed"
            },
            "line": 6,
            "name": "user selects \"Marketing\" department",
            "match": {
              "arguments": [
                {
                  "val": "\"Marketing\"",
                  "offset": 13
                }
              ],
              "location": "steps.HrAppApiT.user_selects_department(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1048577500,
              "status": "passed"
            },
            "line": 7,
            "name": "user stores ui data from selected department",
            "match": {
              "location": "steps.HrAppApiT.user_stores_ui_data_from_selected_department()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat utilities.JDBCUtils.runQuery(JDBCUtils.java:46)\r\n\tat steps.HrAppApiT.user_sends_get_employees_api_call_for_department(HrAppApiT.java:61)\r\n\tat ✽.user sends get employees api call for \"Marketing\" department(file:///C:/Users/Master/IdeaProjects/MIndCucAutom/src/test/resources/features/HrAppApiTest.feature:8)\r\n",
              "status": "failed"
            },
            "line": 8,
            "name": "user sends get employees api call for \"Marketing\" department",
            "match": {
              "arguments": [
                {
                  "val": "\"Marketing\"",
                  "offset": 38
                }
              ],
              "location": "steps.HrAppApiT.user_sends_get_employees_api_call_for_department(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user validates 200 status code",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 15
                }
              ],
              "location": "steps.HrAppApiT.user_validates_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user validates ui data matches with api data with \"Marketing\" department employees",
            "match": {
              "arguments": [
                {
                  "val": "\"Marketing\"",
                  "offset": 50
                }
              ],
              "location": "steps.HrAppApiT.user_validates_ui_data_matches_with_api_data_with_department_employees(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user gets employees from DB who works in \"Marketing\" department",
            "match": {
              "arguments": [
                {
                  "val": "\"Marketing\"",
                  "offset": 41
                }
              ],
              "location": "steps.HrAppApiT.user_gets_employees_from_DB_who_works_in_department(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user validates ui data matches with DB data",
            "match": {
              "location": "steps.HrAppApiT.user_validates_ui_data_matches_with_DB_data()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@MB2-333"
          },
          {
            "name": "@api"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:17:27.862Z",
        "before": [
          {
            "result": {
              "duration": 1318269500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 18,
        "name": "Validating employees api calls",
        "description": "",
        "id": "validating-hr-app-api-calls;validating-employees-api-calls",
        "after": [
          {
            "result": {
              "duration": 672247700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 234356800,
              "status": "passed"
            },
            "line": 19,
            "name": "user creates employee with api post call with data",
            "match": {
              "location": "steps.HrAppApiT.user_creates_employee_with_api_post_call_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Jim"
                ]
              },
              {
                "cells": [
                  "Last Name",
                  "Beam"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "user validates 201 status code",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 15
                }
              ],
              "location": "steps.HrAppApiT.user_validates_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 218740700,
              "status": "passed"
            },
            "line": 23,
            "name": "user validates employee is created with api get call",
            "match": {
              "location": "steps.HrAppApiT.user_validates_employee_is_created_with_api_get_call()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user validates 200 status code",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 15
                }
              ],
              "location": "steps.HrAppApiT.user_validates_status_code(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187505600,
              "status": "passed"
            },
            "line": 25,
            "name": "user updates employee data",
            "match": {
              "location": "steps.HrAppApiT.user_updates_employee_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Jack"
                ]
              },
              {
                "cells": [
                  "Last Name",
                  "Daniels"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "user validates 200 status code",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 15
                }
              ],
              "location": "steps.HrAppApiT.user_validates_status_code(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 296851800,
              "status": "passed"
            },
            "line": 29,
            "name": "user validates employee info is updated with api get call",
            "match": {
              "location": "steps.HrAppApiT.user_validates_employee_info_is_updated_with_api_get_call()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "user validates 200 status code",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 15
                }
              ],
              "location": "steps.HrAppApiT.user_validates_status_code(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 173765800,
              "status": "passed"
            },
            "line": 31,
            "name": "user deletes employee with api delete call",
            "match": {
              "location": "steps.HrAppApiT.user_deletes_employee_with_api_delete_call()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "user validates 204 status code",
            "match": {
              "arguments": [
                {
                  "val": "204",
                  "offset": 15
                }
              ],
              "location": "steps.HrAppApiT.user_validates_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 218736400,
              "status": "passed"
            },
            "line": 33,
            "name": "user validates employee is deleted with api get call",
            "match": {
              "location": "steps.HrAppApiT.user_validates_employee_is_deleted_with_api_get_call()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15597900,
              "status": "passed"
            },
            "line": 34,
            "name": "user validates 200 status code",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 15
                }
              ],
              "location": "steps.HrAppApiT.user_validates_status_code(int)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@MB2-333"
          },
          {
            "name": "@api"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@MB2-333-1"
          },
          {
            "name": "@api"
          }
        ]
      }
    ],
    "name": "validating HR App api calls",
    "description": "",
    "id": "validating-hr-app-api-calls",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/HrAppApiTest.feature",
    "tags": [
      {
        "name": "@MB2-333",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@api",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 10
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 15
        }
      },
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 19
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:17:31.198Z",
        "before": [
          {
            "result": {
              "duration": 1283197800,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 3,
        "name": "Validating update address functionality with valid address",
        "description": "",
        "id": "validating-my-address-update-functionality;validating-update-address-functionality-with-valid-address",
        "after": [
          {
            "result": {
              "duration": 621754800,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2996367800,
              "status": "passed"
            },
            "line": 4,
            "name": "user navigate to My Store App",
            "match": {
              "location": "steps.MyStoreSteps.user_navigate_to_My_Store_App()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2030065500,
              "status": "passed"
            },
            "line": 5,
            "name": "user clicks on Sign In button",
            "match": {
              "location": "steps.MyStoreSteps.user_clicks_on_Sign_In_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3355689700,
              "status": "passed"
            },
            "line": 6,
            "name": "user provides email address \"mindtek123@gmail.com\" and password \"mindtek1234\" and click on sign in button",
            "match": {
              "arguments": [
                {
                  "val": "\"mindtek123@gmail.com\"",
                  "offset": 28
                },
                {
                  "val": "\"mindtek1234\"",
                  "offset": 64
                }
              ],
              "location": "steps.MyStoreSteps.userProvidesEmailAddressAndPasswordAndClickOnSignInButton(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3898693200,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on My Addresses button and update button",
            "match": {
              "location": "steps.MyStoreSteps.user_clicks_on_My_Addresses_button_and_update_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2404704600,
              "status": "passed"
            },
            "line": 8,
            "name": "user provides new street name and number \" Park ave\" and click on save button",
            "match": {
              "arguments": [
                {
                  "val": "\" Park ave\"",
                  "offset": 41
                }
              ],
              "location": "steps.MyStoreSteps.user_provides_new_street_name_and_number_and_click_on_save_button(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30986900,
              "status": "passed"
            },
            "line": 9,
            "name": "user validates that address is updated",
            "match": {
              "location": "steps.MyStoreSteps.userValidatesThatAddressIsUpdated()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-218"
          }
        ]
      }
    ],
    "name": "Validating My address update functionality",
    "description": "",
    "id": "validating-my-address-update-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/MyStoreTests.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@MB2P-218",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 17
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 406988600,
              "status": "passed"
            },
            "line": 4,
            "name": "user navigate to orangeHRM application",
            "match": {
              "location": "steps.OrangeAppSteps.user_navigate_to_orangeHRM_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 951986800,
              "status": "passed"
            },
            "line": 5,
            "name": "user provides username \"Admin\" and password \"admin123\" and clicks on login button",
            "match": {
              "arguments": [
                {
                  "val": "\"Admin\"",
                  "offset": 23
                },
                {
                  "val": "\"admin123\"",
                  "offset": 44
                }
              ],
              "location": "steps.OrangeAppSteps.userProvidesUsernameAndPasswordAndClicksOnLoginButton(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 366704900,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks on Time module",
            "match": {
              "location": "steps.OrangeAppSteps.user_clicks_on_Time_module()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 566602500,
              "status": "passed"
            },
            "line": 7,
            "name": "user select employeeTimesheet from TimesSheets dropdown and click",
            "match": {
              "location": "steps.OrangeAppSteps.user_select_employeeTimesheet_from_TimesSheets_dropdown_and_click()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:17:47.835Z",
        "before": [
          {
            "result": {
              "duration": 1345280800,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 10,
        "name": "Validating reset timesheet functionality",
        "description": "",
        "id": "validating-edit-reset-and-cancel-timesheet-functionality;validating-reset-timesheet-functionality",
        "after": [
          {
            "result": {
              "duration": 644887500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2430095800,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks on edit button and add a row for testing",
            "match": {
              "location": "steps.OrangeAppSteps.userClicksOnEditButtonAndAddARowForTesting()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 728397800,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on edit button and update some of project name and click reset button",
            "match": {
              "location": "steps.OrangeAppSteps.user_clicks_on_edit_button_and_update_some_of_project_name_and_click_reset_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28827600,
              "status": "passed"
            },
            "line": 13,
            "name": "user validates that project name didn\u0027t update",
            "match": {
              "location": "steps.OrangeAppSteps.user_validates_that_project_name_didn_t_update()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-118"
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 412147300,
              "status": "passed"
            },
            "line": 4,
            "name": "user navigate to orangeHRM application",
            "match": {
              "location": "steps.OrangeAppSteps.user_navigate_to_orangeHRM_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 987375700,
              "status": "passed"
            },
            "line": 5,
            "name": "user provides username \"Admin\" and password \"admin123\" and clicks on login button",
            "match": {
              "arguments": [
                {
                  "val": "\"Admin\"",
                  "offset": 23
                },
                {
                  "val": "\"admin123\"",
                  "offset": 44
                }
              ],
              "location": "steps.OrangeAppSteps.userProvidesUsernameAndPasswordAndClicksOnLoginButton(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 368204900,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks on Time module",
            "match": {
              "location": "steps.OrangeAppSteps.user_clicks_on_Time_module()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 547452900,
              "status": "passed"
            },
            "line": 7,
            "name": "user select employeeTimesheet from TimesSheets dropdown and click",
            "match": {
              "location": "steps.OrangeAppSteps.user_select_employeeTimesheet_from_TimesSheets_dropdown_and_click()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:17:55.321Z",
        "before": [
          {
            "result": {
              "duration": 1291850700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "Validating cancel timesheet Functionality",
        "description": "",
        "id": "validating-edit-reset-and-cancel-timesheet-functionality;validating-cancel-timesheet-functionality",
        "after": [
          {
            "result": {
              "duration": 652867600,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 722870500,
              "status": "passed"
            },
            "line": 16,
            "name": "user clicks on edit button and click on cancel button",
            "match": {
              "location": "steps.OrangeAppSteps.user_clicks_on_edit_button_and_click_on_cancel_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33983800,
              "status": "passed"
            },
            "line": 17,
            "name": "user validates that is on employeeTimesheet page",
            "match": {
              "location": "steps.OrangeAppSteps.user_validates_that_is_on_employeeTimesheet_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-118"
          }
        ]
      }
    ],
    "name": "Validating Edit Reset and Cancel Timesheet functionality",
    "description": "",
    "id": "validating-edit-reset-and-cancel-timesheet-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/OrangeHRMAppTests.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 20
        }
      },
      {
        "name": "@MB2P-118",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 24
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:18:00.337Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 18,
        "name": "Validating Place Order functionality",
        "description": "",
        "id": "validating-pizza-application-functionalities;validating-place-order-functionality;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1456893100,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to pizza application",
            "match": {
              "location": "steps.PizzaAppSteps.user_navigate_to_pizza_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 810706700,
              "status": "passed"
            },
            "line": 6,
            "name": "user creates pizza order with data",
            "match": {
              "location": "steps.PizzaAppSteps.user_creates_pizza_order_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pizza",
                  "Small 6 Slices - no toppings"
                ]
              },
              {
                "cells": [
                  "Toppings 1",
                  "Mushrooms"
                ]
              },
              {
                "cells": [
                  "Toppings 2",
                  "Extra cheese"
                ]
              },
              {
                "cells": [
                  "Quantity",
                  "1"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Jhon Doe"
                ]
              },
              {
                "cells": [
                  "Email",
                  "jhondoe@gmail.com"
                ]
              },
              {
                "cells": [
                  "Phone",
                  "7731592511"
                ]
              },
              {
                "cells": [
                  "Payment Type",
                  "Cash on Pickup"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 41677500,
              "status": "passed"
            },
            "line": 15,
            "name": "user validates that order is created with success message \"Thank you for your order! TOTAL: \" for \"1\" \"Small 6 Slices - no toppings\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Thank you for your order! TOTAL: \"",
                  "offset": 58
                },
                {
                  "val": "\"1\"",
                  "offset": 98
                },
                {
                  "val": "\"Small 6 Slices - no toppings\"",
                  "offset": 102
                }
              ],
              "location": "steps.PizzaAppSteps.userValidatesThatOrderIsCreatedWithSuccessMessageFor(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@MB2P-123"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:02.652Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 19,
        "name": "Validating Place Order functionality",
        "description": "",
        "id": "validating-pizza-application-functionalities;validating-place-order-functionality;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 41981800,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to pizza application",
            "match": {
              "location": "steps.PizzaAppSteps.user_navigate_to_pizza_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 830025700,
              "status": "passed"
            },
            "line": 6,
            "name": "user creates pizza order with data",
            "match": {
              "location": "steps.PizzaAppSteps.user_creates_pizza_order_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pizza",
                  "Large 10 Slices - 2 toppings"
                ]
              },
              {
                "cells": [
                  "Toppings 1",
                  "Caramelized onions"
                ]
              },
              {
                "cells": [
                  "Toppings 2",
                  "Extra cheese"
                ]
              },
              {
                "cells": [
                  "Quantity",
                  "3"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Adrian Torres"
                ]
              },
              {
                "cells": [
                  "Email",
                  "atorres@gmail.com"
                ]
              },
              {
                "cells": [
                  "Phone",
                  "7731594511"
                ]
              },
              {
                "cells": [
                  "Payment Type",
                  "Credit Card"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26055700,
              "status": "passed"
            },
            "line": 15,
            "name": "user validates that order is created with success message \"Thank you for your order! TOTAL: \" for \"3\" \"Large 10 Slices - 2 toppings\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Thank you for your order! TOTAL: \"",
                  "offset": 58
                },
                {
                  "val": "\"3\"",
                  "offset": 98
                },
                {
                  "val": "\"Large 10 Slices - 2 toppings\"",
                  "offset": 102
                }
              ],
              "location": "steps.PizzaAppSteps.userValidatesThatOrderIsCreatedWithSuccessMessageFor(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@MB2P-123"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:03.555Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 20,
        "name": "Validating Place Order functionality",
        "description": "",
        "id": "validating-pizza-application-functionalities;validating-place-order-functionality;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46996800,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to pizza application",
            "match": {
              "location": "steps.PizzaAppSteps.user_navigate_to_pizza_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 821904100,
              "status": "passed"
            },
            "line": 6,
            "name": "user creates pizza order with data",
            "match": {
              "location": "steps.PizzaAppSteps.user_creates_pizza_order_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pizza",
                  "Medium 8 Slices - 2 toppings"
                ]
              },
              {
                "cells": [
                  "Toppings 1",
                  "Olives"
                ]
              },
              {
                "cells": [
                  "Toppings 2",
                  "Diced Mango"
                ]
              },
              {
                "cells": [
                  "Quantity",
                  "5"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Adrian Torres"
                ]
              },
              {
                "cells": [
                  "Email",
                  "atorres@gmail.com"
                ]
              },
              {
                "cells": [
                  "Phone",
                  "7731594511"
                ]
              },
              {
                "cells": [
                  "Payment Type",
                  "Credit Card"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 22055600,
              "status": "passed"
            },
            "line": 15,
            "name": "user validates that order is created with success message \"Thank you for your order! TOTAL: \" for \"5\" \"Medium 8 Slices - 2 toppings\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Thank you for your order! TOTAL: \"",
                  "offset": 58
                },
                {
                  "val": "\"5\"",
                  "offset": 98
                },
                {
                  "val": "\"Medium 8 Slices - 2 toppings\"",
                  "offset": 102
                }
              ],
              "location": "steps.PizzaAppSteps.userValidatesThatOrderIsCreatedWithSuccessMessageFor(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@MB2P-123"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:04.450Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 21,
        "name": "Validating Place Order functionality",
        "description": "",
        "id": "validating-pizza-application-functionalities;validating-place-order-functionality;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46980100,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to pizza application",
            "match": {
              "location": "steps.PizzaAppSteps.user_navigate_to_pizza_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 826219600,
              "status": "passed"
            },
            "line": 6,
            "name": "user creates pizza order with data",
            "match": {
              "location": "steps.PizzaAppSteps.user_creates_pizza_order_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pizza",
                  "Small 6 Slices - no toppings"
                ]
              },
              {
                "cells": [
                  "Toppings 1",
                  "Salami"
                ]
              },
              {
                "cells": [
                  "Toppings 2",
                  "Salami"
                ]
              },
              {
                "cells": [
                  "Quantity",
                  "1"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Jhon Doe"
                ]
              },
              {
                "cells": [
                  "Email",
                  "jhondoe@gmail.com"
                ]
              },
              {
                "cells": [
                  "Phone",
                  "7731592511"
                ]
              },
              {
                "cells": [
                  "Payment Type",
                  "Cash on Pickup"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 21279700,
              "status": "passed"
            },
            "line": 15,
            "name": "user validates that order is created with success message \"Thank you for your order! TOTAL: \" for \"1\" \"Small 6 Slices - no toppings\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Thank you for your order! TOTAL: \"",
                  "offset": 58
                },
                {
                  "val": "\"1\"",
                  "offset": 98
                },
                {
                  "val": "\"Small 6 Slices - no toppings\"",
                  "offset": 102
                }
              ],
              "location": "steps.PizzaAppSteps.userValidatesThatOrderIsCreatedWithSuccessMessageFor(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@MB2P-123"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:05.350Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "Validating Place Order functionality",
        "description": "",
        "id": "validating-pizza-application-functionalities;validating-place-order-functionality;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 42374600,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to pizza application",
            "match": {
              "location": "steps.PizzaAppSteps.user_navigate_to_pizza_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 916099300,
              "status": "passed"
            },
            "line": 6,
            "name": "user creates pizza order with data",
            "match": {
              "location": "steps.PizzaAppSteps.user_creates_pizza_order_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pizza",
                  "Large 10 Slices - no toppings"
                ]
              },
              {
                "cells": [
                  "Toppings 1",
                  "Mushrooms"
                ]
              },
              {
                "cells": [
                  "Toppings 2",
                  "Extra cheese"
                ]
              },
              {
                "cells": [
                  "Quantity",
                  "8"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Adrian Torres"
                ]
              },
              {
                "cells": [
                  "Email",
                  "atorres@gmail.com"
                ]
              },
              {
                "cells": [
                  "Phone",
                  "7731594511"
                ]
              },
              {
                "cells": [
                  "Payment Type",
                  "Credit Card"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20106600,
              "status": "passed"
            },
            "line": 15,
            "name": "user validates that order is created with success message \"Thank you for your order! TOTAL: \" for \"8\" \"Large 10 Slices - no toppings\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Thank you for your order! TOTAL: \"",
                  "offset": 58
                },
                {
                  "val": "\"8\"",
                  "offset": 98
                },
                {
                  "val": "\"Large 10 Slices - no toppings\"",
                  "offset": 102
                }
              ],
              "location": "steps.PizzaAppSteps.userValidatesThatOrderIsCreatedWithSuccessMessageFor(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@MB2P-123"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:06.334Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "Validating Place Order functionality",
        "description": "",
        "id": "validating-pizza-application-functionalities;validating-place-order-functionality;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 41947000,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to pizza application",
            "match": {
              "location": "steps.PizzaAppSteps.user_navigate_to_pizza_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 831613200,
              "status": "passed"
            },
            "line": 6,
            "name": "user creates pizza order with data",
            "match": {
              "location": "steps.PizzaAppSteps.user_creates_pizza_order_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pizza",
                  "Small 6 Slices - 1 topping"
                ]
              },
              {
                "cells": [
                  "Toppings 1",
                  "Parmesan cheese"
                ]
              },
              {
                "cells": [
                  "Toppings 2",
                  "Diced Mango"
                ]
              },
              {
                "cells": [
                  "Quantity",
                  "10"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Adrian Torres"
                ]
              },
              {
                "cells": [
                  "Email",
                  "atorres@gmail.com"
                ]
              },
              {
                "cells": [
                  "Phone",
                  "7731594511"
                ]
              },
              {
                "cells": [
                  "Payment Type",
                  "Credit Card"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18004200,
              "status": "passed"
            },
            "line": 15,
            "name": "user validates that order is created with success message \"Thank you for your order! TOTAL: \" for \"10\" \"Small 6 Slices - 1 topping\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Thank you for your order! TOTAL: \"",
                  "offset": 58
                },
                {
                  "val": "\"10\"",
                  "offset": 98
                },
                {
                  "val": "\"Small 6 Slices - 1 topping\"",
                  "offset": 103
                }
              ],
              "location": "steps.PizzaAppSteps.userValidatesThatOrderIsCreatedWithSuccessMessageFor(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@MB2P-123"
          }
        ]
      }
    ],
    "name": "Validating pizza application functionalities",
    "description": "",
    "id": "validating-pizza-application-functionalities",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/PizzaAppTests.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@MB2P-123",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 20
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "Repeated first steps in each scenario.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 269437400,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to WebOrdersapplication",
            "match": {
              "location": "steps.WebOrdersDeleteEditSteps.user_navigates_to_WebOrdersapplication()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 580205200,
              "status": "passed"
            },
            "line": 6,
            "name": "user logins in with username \"Tester\" and password \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 29
                },
                {
                  "val": "\"test\"",
                  "offset": 51
                }
              ],
              "location": "steps.WebOrdersDeleteEditSteps.user_logins_in_with_username_and_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:07.231Z",
        "before": [
          {
            "result": {
              "duration": 27481200,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Validating delete selected order functionality in View All Orders",
        "description": "",
        "id": "validating-delete/edit-functionalities-in-weborders-application;validating-delete-selected-order-functionality-in-view-all-orders",
        "after": [
          {
            "result": {
              "duration": 633730500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 65733800,
              "status": "passed"
            },
            "line": 12,
            "name": "user selects any order from View All Orders",
            "match": {
              "location": "steps.WebOrdersDeleteEditSteps.user_selects_any_order_from_View_All_Orders()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 262919100,
              "status": "passed"
            },
            "line": 13,
            "name": "user deletes selected order",
            "match": {
              "location": "steps.WebOrdersDeleteEditSteps.user_deletes_selected_order()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 177018500,
              "status": "passed"
            },
            "line": 14,
            "name": "user validates that order is deleted",
            "match": {
              "location": "steps.WebOrdersDeleteEditSteps.user_validates_that_order_is_deleted()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@homework_01"
          }
        ]
      },
      {
        "line": 4,
        "name": "Repeated first steps in each scenario.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 231105600,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigates to WebOrdersapplication",
            "match": {
              "location": "steps.WebOrdersDeleteEditSteps.user_navigates_to_WebOrdersapplication()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 584469400,
              "status": "passed"
            },
            "line": 6,
            "name": "user logins in with username \"Tester\" and password \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 29
                },
                {
                  "val": "\"test\"",
                  "offset": 51
                }
              ],
              "location": "steps.WebOrdersDeleteEditSteps.user_logins_in_with_username_and_password(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:09.249Z",
        "before": [
          {
            "result": {
              "duration": 1313042400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 16,
        "name": "Validating edit order functionality in View All Orders",
        "description": "",
        "id": "validating-delete/edit-functionalities-in-weborders-application;validating-edit-order-functionality-in-view-all-orders",
        "after": [
          {
            "result": {
              "duration": 631328300,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 60340800,
              "status": "passed"
            },
            "line": 19,
            "name": "user selects any order from View All Orders",
            "match": {
              "location": "steps.WebOrdersDeleteEditSteps.user_selects_any_order_from_View_All_Orders()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 699711000,
              "status": "passed"
            },
            "line": 20,
            "name": "user clicks on edit button and updates customer name",
            "match": {
              "location": "steps.WebOrdersDeleteEditSteps.user_clicks_on_edit_button_and_updates_customer_name()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158794300,
              "status": "passed"
            },
            "line": 21,
            "name": "user validates that customer name is updated in View All Orders pge",
            "match": {
              "location": "steps.WebOrdersDeleteEditSteps.user_validates_that_customer_name_is_updated_in_View_All_Orders_pge()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@homework_01"
          }
        ]
      }
    ],
    "name": "Validating delete/edit functionalities in WebOrders application",
    "description": "",
    "id": "validating-delete/edit-functionalities-in-weborders-application",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/WebOrdersDeleteEditFunctionality.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@homework_01",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 17
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:18:12.928Z",
        "before": [
          {
            "result": {
              "duration": 1301254600,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Validating login functionality with valid credential",
        "description": "",
        "id": "validating-weborders-application-login-functionality;validating-login-functionality-with-valid-credential",
        "after": [
          {
            "result": {
              "duration": 1922497700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 234358700,
              "status": "passed"
            },
            "line": 6,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 569430700,
              "status": "passed"
            },
            "line": 8,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 612754900,
              "status": "passed"
            },
            "line": 10,
            "name": "user validates application is logged in",
            "match": {
              "location": "steps.WebOrdersSteps.user_validates_application_is_logged_in()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:17.568Z",
        "before": [
          {
            "result": {
              "duration": 1327304800,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "Validating login functionality with invalid credential",
        "description": "",
        "id": "validating-weborders-application-login-functionality;validating-login-functionality-with-invalid-credential",
        "after": [
          {
            "result": {
              "duration": 1913069400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 216902200,
              "status": "passed"
            },
            "line": 13,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 220602800,
              "status": "passed"
            },
            "line": 14,
            "name": "user provides username \"invalid\" and password \"invalid\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"invalid\"",
                  "offset": 23
                },
                {
                  "val": "\"invalid\"",
                  "offset": 46
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 642301200,
              "status": "passed"
            },
            "line": 15,
            "name": "user validates error message \"Invalid Login or Password.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid Login or Password.\"",
                  "offset": 29
                }
              ],
              "location": "steps.WebOrdersSteps.user_validates_error_message(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@ui"
          }
        ]
      }
    ],
    "name": "Validating WebOrders application login functionality",
    "description": "",
    "id": "validating-weborders-application-login-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/WebOrdersLogin.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 20
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-10-19T03:18:21.888Z",
        "before": [
          {
            "result": {
              "duration": 1307546500,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "Validating calculate functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-calculate-functionality;;2",
        "after": [
          {
            "result": {
              "duration": 648372100,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 227095000,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 600883500,
              "status": "passed"
            },
            "line": 6,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 198926700,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 202845200,
              "status": "passed"
            },
            "line": 8,
            "name": "user selects \"MyMoney\" product with 1 quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                },
                {
                  "val": "1",
                  "offset": 36
                }
              ],
              "location": "steps.WebOrdersSteps.userSelectsProductWithQuantity(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89998800,
              "status": "passed"
            },
            "line": 9,
            "name": "user validates total is calculated for quantity 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 48
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesTotalIsCalculatedForQuantity(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:25.179Z",
        "before": [
          {
            "result": {
              "duration": 1332937300,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 14,
        "name": "Validating calculate functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-calculate-functionality;;3",
        "after": [
          {
            "result": {
              "duration": 617005600,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 198013000,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 602934400,
              "status": "passed"
            },
            "line": 6,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 182011200,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 245495900,
              "status": "passed"
            },
            "line": 8,
            "name": "user selects \"FamilyAlbum\" product with 2 quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"FamilyAlbum\"",
                  "offset": 13
                },
                {
                  "val": "2",
                  "offset": 40
                }
              ],
              "location": "steps.WebOrdersSteps.userSelectsProductWithQuantity(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90221200,
              "status": "passed"
            },
            "line": 9,
            "name": "user validates total is calculated for quantity 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 48
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesTotalIsCalculatedForQuantity(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:28.448Z",
        "before": [
          {
            "result": {
              "duration": 1279469600,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "Validating calculate functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-calculate-functionality;;4",
        "after": [
          {
            "result": {
              "duration": 629883700,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 236530500,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 588654500,
              "status": "passed"
            },
            "line": 6,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 183570200,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 239098600,
              "status": "passed"
            },
            "line": 8,
            "name": "user selects \"ScreenSaver\" product with 5 quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"ScreenSaver\"",
                  "offset": 13
                },
                {
                  "val": "5",
                  "offset": 40
                }
              ],
              "location": "steps.WebOrdersSteps.userSelectsProductWithQuantity(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104493600,
              "status": "passed"
            },
            "line": 9,
            "name": "user validates total is calculated for quantity 5",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 48
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesTotalIsCalculatedForQuantity(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:31.711Z",
        "before": [
          {
            "result": {
              "duration": 1301359100,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 16,
        "name": "Validating calculate functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-calculate-functionality;;5",
        "after": [
          {
            "result": {
              "duration": 630494000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 250073600,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 584644900,
              "status": "passed"
            },
            "line": 6,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 172652200,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 189106200,
              "status": "passed"
            },
            "line": 8,
            "name": "user selects \"MyMoney\" product with 25 quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                },
                {
                  "val": "25",
                  "offset": 36
                }
              ],
              "location": "steps.WebOrdersSteps.userSelectsProductWithQuantity(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103651400,
              "status": "passed"
            },
            "line": 9,
            "name": "user validates total is calculated for quantity 25",
            "match": {
              "arguments": [
                {
                  "val": "25",
                  "offset": 48
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesTotalIsCalculatedForQuantity(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:34.959Z",
        "before": [
          {
            "result": {
              "duration": 1319267300,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 17,
        "name": "Validating calculate functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-calculate-functionality;;6",
        "after": [
          {
            "result": {
              "duration": 638007200,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 239067300,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 661592500,
              "status": "passed"
            },
            "line": 6,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 221332000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 223790200,
              "status": "passed"
            },
            "line": 8,
            "name": "user selects \"FamilyAlbum\" product with 100 quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"FamilyAlbum\"",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 40
                }
              ],
              "location": "steps.WebOrdersSteps.userSelectsProductWithQuantity(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 106052200,
              "status": "passed"
            },
            "line": 9,
            "name": "user validates total is calculated for quantity 100",
            "match": {
              "arguments": [
                {
                  "val": "100",
                  "offset": 48
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesTotalIsCalculatedForQuantity(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:38.368Z",
        "before": [
          {
            "result": {
              "duration": 1309383400,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 18,
        "name": "Validating calculate functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-calculate-functionality;;7",
        "after": [
          {
            "result": {
              "duration": 617211300,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 232003500,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 749982600,
              "status": "passed"
            },
            "line": 6,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 180701200,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 221481500,
              "status": "passed"
            },
            "line": 8,
            "name": "user selects \"FamilyAlbum\" product with 4656 quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"FamilyAlbum\"",
                  "offset": 13
                },
                {
                  "val": "4656",
                  "offset": 40
                }
              ],
              "location": "steps.WebOrdersSteps.userSelectsProductWithQuantity(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84894800,
              "status": "passed"
            },
            "line": 9,
            "name": "user validates total is calculated for quantity 4656",
            "match": {
              "arguments": [
                {
                  "val": "4656",
                  "offset": 48
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesTotalIsCalculatedForQuantity(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:41.764Z",
        "before": [
          {
            "result": {
              "duration": 1296268600,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 19,
        "name": "Validating calculate functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-calculate-functionality;;8",
        "after": [
          {
            "result": {
              "duration": 646607300,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 241380600,
              "status": "passed"
            },
            "line": 5,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 882898500,
              "status": "passed"
            },
            "line": 6,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 241078800,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 249471500,
              "status": "passed"
            },
            "line": 8,
            "name": "user selects \"ScreenSaver\" product with 330000 quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"ScreenSaver\"",
                  "offset": 13
                },
                {
                  "val": "330000",
                  "offset": 40
                }
              ],
              "location": "steps.WebOrdersSteps.userSelectsProductWithQuantity(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120234600,
              "status": "passed"
            },
            "line": 9,
            "name": "user validates total is calculated for quantity 330000",
            "match": {
              "arguments": [
                {
                  "val": "330000",
                  "offset": 48
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesTotalIsCalculatedForQuantity(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:45.442Z",
        "before": [
          {
            "result": {
              "duration": 1268231200,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 33,
        "name": "Validating create order functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-create-order-functionality;;2",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 809918800,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 225776900,
              "status": "passed"
            },
            "line": 22,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 608447700,
              "status": "passed"
            },
            "line": 23,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 29578500,
              "status": "passed"
            },
            "line": 24,
            "name": "user counts number of orders in table",
            "match": {
              "location": "steps.WebOrdersSteps.userCountsNumberOfOrdersInTable()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 205639100,
              "status": "passed"
            },
            "line": 25,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 877156800,
              "status": "passed"
            },
            "line": 26,
            "name": "user creates order with data",
            "match": {
              "location": "steps.WebOrdersSteps.user_creates_order_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "order",
                  "quantity",
                  "name",
                  "address",
                  "city",
                  "state",
                  "zip",
                  "cc",
                  "expire date"
                ]
              },
              {
                "cells": [
                  "MyMoney",
                  "1",
                  "Jet Li",
                  "4343 n Neva",
                  "Chicago",
                  "Illinois",
                  "60706",
                  "4598632578415522",
                  "12/22"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31999300,
              "status": "passed"
            },
            "line": 29,
            "name": "user validates success message \"New order has been successfully added.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"New order has been successfully added.\"",
                  "offset": 31
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesSuccessMessage(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.junit.ComparisonFailure: expected:\u003c10/1[8]/2021\u003e but was:\u003c10/1[9]/2021\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat steps.WebOrdersSteps.userValidatesOrderAddedToListOfOrders(WebOrdersSteps.java:174)\r\n\tat ✽.user validates order added to List Of Orders(file:///C:/Users/Master/IdeaProjects/MIndCucAutom/src/test/resources/features/WebOrdersOrderCreationTest.feature:30)\r\n",
              "duration": 575341200,
              "status": "failed"
            },
            "line": 30,
            "name": "user validates order added to List Of Orders",
            "match": {
              "location": "steps.WebOrdersSteps.userValidatesOrderAddedToListOfOrders()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@MB2P-121"
          }
        ]
      },
      {
        "start_timestamp": "2021-10-19T03:18:50.074Z",
        "before": [
          {
            "result": {
              "duration": 1285784200,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 34,
        "name": "Validating create order functionality",
        "description": "",
        "id": "validating-calculate-and-order-creation-functionality;validating-create-order-functionality;;3",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 801107600,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 237546300,
              "status": "passed"
            },
            "line": 22,
            "name": "user navigate to weborders application",
            "match": {
              "location": "steps.WebOrdersSteps.user_navigate_to_weborders_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 602093200,
              "status": "passed"
            },
            "line": 23,
            "name": "user provides username \"Tester\" and password \"test\" and clicks on login",
            "match": {
              "arguments": [
                {
                  "val": "\"Tester\"",
                  "offset": 23
                },
                {
                  "val": "\"test\"",
                  "offset": 45
                }
              ],
              "location": "steps.WebOrdersSteps.user_provides_username_and_password_and_clicks_on_login(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 27435400,
              "status": "passed"
            },
            "line": 24,
            "name": "user counts number of orders in table",
            "match": {
              "location": "steps.WebOrdersSteps.userCountsNumberOfOrdersInTable()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 169043500,
              "status": "passed"
            },
            "line": 25,
            "name": "user clicks on Order module",
            "match": {
              "location": "steps.WebOrdersSteps.userClicksOnOrderModule()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 913433300,
              "status": "passed"
            },
            "line": 26,
            "name": "user creates order with data",
            "match": {
              "location": "steps.WebOrdersSteps.user_creates_order_with_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "order",
                  "quantity",
                  "name",
                  "address",
                  "city",
                  "state",
                  "zip",
                  "cc",
                  "expire date"
                ]
              },
              {
                "cells": [
                  "FamilyAlbum",
                  "5",
                  "Bob Dylan",
                  "1022 Western",
                  "New York",
                  "New York",
                  "10701",
                  "4598456778941234",
                  "10/22"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33996300,
              "status": "passed"
            },
            "line": 29,
            "name": "user validates success message \"New order has been successfully added.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"New order has been successfully added.\"",
                  "offset": 31
                }
              ],
              "location": "steps.WebOrdersSteps.userValidatesSuccessMessage(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.junit.ComparisonFailure: expected:\u003c10/1[8]/2021\u003e but was:\u003c10/1[9]/2021\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat steps.WebOrdersSteps.userValidatesOrderAddedToListOfOrders(WebOrdersSteps.java:174)\r\n\tat ✽.user validates order added to List Of Orders(file:///C:/Users/Master/IdeaProjects/MIndCucAutom/src/test/resources/features/WebOrdersOrderCreationTest.feature:30)\r\n",
              "duration": 553917700,
              "status": "failed"
            },
            "line": 30,
            "name": "user validates order added to List Of Orders",
            "match": {
              "location": "steps.WebOrdersSteps.userValidatesOrderAddedToListOfOrders()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@ui"
          },
          {
            "name": "@MB2P-120"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@MB2P-121"
          }
        ]
      }
    ],
    "name": "Validating calculate and order creation functionality",
    "description": "",
    "id": "validating-calculate-and-order-creation-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/WebOrdersOrderCreationTest.feature",
    "tags": [
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@ui",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 13
        }
      },
      {
        "name": "@MB2P-120",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 17
        }
      },
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 27
        }
      }
    ]
  }
]